---
name: managed pr check and test examples

on:
  workflow_call:

# These are used by nearly every step and job, so we define them here to avoid repetition.
env:
  ARM_CLIENT_ID_OVERRIDE: ${{ secrets.ARM_CLIENT_ID_OVERRIDE }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID_OVERRIDE: ${{ secrets.ARM_SUBSCRIPTION_ID_OVERRIDE }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID_OVERRIDE: ${{ secrets.ARM_TENANT_ID_OVERRIDE }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_USE_OIDC: "true"
  FORCE_COLOR: 1
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SECRETS_CONTEXT: ${{ toJson(secrets) }}
  TF_IN_AUTOMATION: 1
  TF_VAR_enable_telemetry: "false"
  VARS_CONTEXT: ${{ toJson(vars) }}

jobs:
  pr-check:
    if: github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Set up Docker
        uses: docker/setup-docker-action@b60f85385d03ac8acfca6d9996982511d8620a19 #v4.3.0
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: pr-check
        run: |
          set -e

          export REMOTE_SCRIPT="https://raw.githubusercontent.com/Azure/avm-terraform-governance/main/scripts"
          # This needs to be in the parent directory to avoid git seeing the file as a change
          curl -H 'Cache-Control: no-cache, no-store' -sSL "$REMOTE_SCRIPT/gha-azure-cred-prep.sh" -o ../prepare-credential.sh
          source ../prepare-credential.sh

          # Fix Docker socket permissions for CI
          sudo chmod 666 /var/run/docker.sock

          ./avm pr-check

  getexamples:
    if: github.event.pull_request.head.repo.fork == false
    needs: pr-check
    runs-on: ubuntu-latest
    environment: empty-no-approval
    outputs:
      examples: ${{ steps.getexamples.outputs.examples }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - uses: Azure/avm-terraform-governance/.github/actions/getexamples@main
        id: getexamples

  checksetup:
    runs-on: ubuntu-latest
    needs: getexamples
    environment: empty-no-approval
    outputs:
      setup_exists: ${{ steps.check-setup.outputs.setup_exists }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Check if setup.sh exists
        id: check-setup
        run: |
          if [ -f examples/setup.sh ]; then
            echo "setup_exists=true" >> $GITHUB_OUTPUT
          else
            echo "setup_exists=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

  globalsetup:
    if: needs.checksetup.outputs.setup_exists == 'true' && github.event.repository.name != 'terraform-azurerm-avm-template' && github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    environment: test
    needs: checksetup
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Run global setup script
        run: |
          set -e

          export REMOTE_SCRIPT="https://raw.githubusercontent.com/Azure/avm-terraform-governance/main/scripts"
          # This needs to be in the parent directory to avoid git seeing the file as a change
          curl -H 'Cache-Control: no-cache, no-store' -sSL "$REMOTE_SCRIPT/gha-azure-cred-prep.sh" -o ../prepare-credential.sh
          source ../prepare-credential.sh

          ./avm global-teardown
        shell: bash

  testexamples:
    if: always() && !failure() && !cancelled() && github.event.repository.name != 'terraform-azurerm-avm-template' && github.event.pull_request.head.repo.fork == false
    name: ${{ matrix.example }}
    runs-on: ubuntu-latest
    needs: [getexamples, checksetup, globalsetup]
    environment: test
    env:
      TF_IN_AUTOMATION: 1
      TF_VAR_enable_telemetry: false
    strategy:
      matrix:
        example: ${{ fromJson(needs.getexamples.outputs.examples) }}
      fail-fast: false
    steps:
      - name: Set up Docker
        uses: docker/setup-docker-action@b60f85385d03ac8acfca6d9996982511d8620a19 #v4.3.0
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2

      - name: Test example
        shell: bash
        env:
          AVM_EXAMPLE: ${{ matrix.example }}
          AVM_RUNNING_IN_GITHUB_ACTIONS: true
        run: |
          set -e

          export REMOTE_SCRIPT="https://raw.githubusercontent.com/Azure/avm-terraform-governance/main/scripts"
          # This needs to be in the parent directory to avoid git seeing the file as a change
          curl -H 'Cache-Control: no-cache, no-store' -sSL "$REMOTE_SCRIPT/gha-azure-cred-prep.sh" -o ../prepare-credential.sh
          source ../prepare-credential.sh

          # Fix Docker socket permissions for CI
          sudo chmod 666 /var/run/docker.sock

          ./avm test-examples

  checkteardown:
    runs-on: ubuntu-latest
    if: always() && github.event.repository.name != 'terraform-azurerm-avm-template' && github.event.pull_request.head.repo.fork == false
    needs: testexamples
    environment: empty-no-approval
    outputs:
      teardown_exists: ${{ steps.check-teardown.outputs.teardown_exists }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Check if teardown.sh exists
        id: check-teardown
        run: |
          if [ -f examples/teardown.sh ]; then
            echo "teardown_exists=true" >> $GITHUB_OUTPUT
          else
            echo "teardown_exists=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

  globalteardown:
    if: always() && needs.checkteardown.outputs.teardown_exists == 'true' && github.event.repository.name != 'terraform-azurerm-avm-template' && github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    environment: test
    needs: checkteardown
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Run teardown script
        run: |
          set -e

          export REMOTE_SCRIPT="https://raw.githubusercontent.com/Azure/avm-terraform-governance/main/scripts"
          # This needs to be in the parent directory to avoid git seeing the file as a change
          curl -H 'Cache-Control: no-cache, no-store' -sSL "$REMOTE_SCRIPT/gha-azure-cred-prep.sh" -o ../prepare-credential.sh
          source ../prepare-credential.sh

          ./avm global-teardown
        id: global-teardown
        shell: bash


  # This job is only run when all the previous jobs are successful.
  # We can use it for PR validation to ensure all examples have completed.
  testexamplescomplete:
    if: always() && !failure() && !cancelled() && github.event.repository.name != 'terraform-azurerm-avm-template' && github.event.pull_request.head.repo.fork == false
    runs-on: ubuntu-latest
    environment: empty-no-approval
    needs: testexamples
    steps:
      - run: echo "All tests passed"
